# Build frontend with memory limits
FROM node:20-alpine AS frontend-builder

# Install pnpm
RUN corepack enable pnpm

WORKDIR /app/frontend

# Set Node memory limit to prevent OOM - increased to 3GB for swap environment
ENV NODE_OPTIONS="--max-old-space-size=3072 --expose-gc"
ENV NODE_ENV="production"

COPY app/package.json app/pnpm-lock.yaml* ./
# Install with reduced concurrency and memory optimizations
ENV PNPM_CHILD_CONCURRENCY=1
ENV PNPM_NETWORK_CONCURRENCY=1
ENV PNPM_FETCH_RETRIES=1
RUN pnpm install --frozen-lockfile --prefer-offline

COPY app/ ./
# Add memory debugging and try build
RUN echo "Node.js memory limit: $NODE_OPTIONS" && \
    node -e "console.log('Max heap size:', v8.getHeapStatistics().heap_size_limit / 1024 / 1024, 'MB')" && \
    pnpm run build

# Build backend with reduced parallelism
FROM golang:1.24-alpine AS backend-builder

RUN apk add --no-cache gcc musl-dev sqlite-dev

# Limit Go's parallelism to reduce memory usage
ENV GOGC=50
ENV GOMEMLIMIT=500MiB
ENV GOMAXPROCS=1

ENV GOPROXY=https://proxy.golang.org,direct
ENV CGO_ENABLED=1

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY cmd/ ./cmd/
COPY internal/ ./internal/
COPY *.go ./

# Build with reduced parallelism
RUN go build -p 1 -ldflags="-w -s" -o night-owls-server ./cmd/server

# Minimal production image
FROM alpine:3.20

RUN apk --no-cache add ca-certificates sqlite tzdata && \
    addgroup -S appgroup && \
    adduser -S appuser -G appgroup && \
    mkdir -p /app/static /app/data /app/migrations && \
    chown -R appuser:appgroup /app

WORKDIR /app

COPY --chown=appuser:appgroup internal/db/migrations/ ./migrations/
COPY --from=backend-builder --chown=appuser:appgroup /app/night-owls-server .
COPY --from=frontend-builder --chown=appuser:appgroup /app/frontend/build ./static

USER appuser
EXPOSE 5888

ENV TZ=UTC \
    SERVER_PORT=5888 \
    STATIC_DIR=./static \
    DATABASE_PATH=./data/production.db

HEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:5888/health || exit 1

CMD ["./night-owls-server"] 