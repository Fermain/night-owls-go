name: Deploy Demo Instance

on:
  workflow_dispatch:
    inputs:
      reset_demo_data:
        description: 'Reset demo data with fresh seed'
        required: false
        default: 'true'
        type: boolean
      user_count:
        description: 'Number of demo users to create'
        required: false
        default: '50'
        type: string
  push:
    branches: [ demo ]  # Auto-deploy on demo branch pushes

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-demo:
    name: Deploy Demo Instance
    runs-on: ubuntu-latest
    environment: Demo
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Deploy demo to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: demo.nightowls.app
        username: deploy
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/night-owls-go
          
          echo "🎭 Deploying Demo Instance..."
          
          # Copy demo configuration files
          curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.demo.yml > docker-compose.demo.yml
          curl -s https://raw.githubusercontent.com/${{ github.repository }}/main/Caddyfile.multi > Caddyfile.multi
          
          # Backup current Caddyfile and switch to multi-domain
          cp Caddyfile Caddyfile.single.backup
          cp Caddyfile.multi Caddyfile
          
          echo "🛑 Stopping demo containers (if running)..."
          docker compose -f docker-compose.demo.yml down || true
          
          echo "🧹 Cleaning up demo containers..."
          docker container prune -f
          
          echo "🔐 Logging in to registry..."
          echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          echo "📦 Pulling latest image..."
          docker pull ghcr.io/fermain/night-owls-go:latest
          
          # Reset demo data if requested
          if [ "${{ github.event.inputs.reset_demo_data }}" = "true" ]; then
            echo "🗑️ Resetting demo data..."
            docker volume rm night_owls_demo_data || true
          fi
          
          echo "🚀 Starting demo instance..."
          docker compose -f docker-compose.demo.yml up -d
          
          echo "⏳ Waiting for demo instance to be healthy..."
          sleep 30
          
          # Wait for demo container to be healthy
          for i in {1..12}; do
            if docker compose -f docker-compose.demo.yml ps | grep -q "healthy"; then
              echo "✅ Demo instance is healthy!"
              break
            fi
            echo "⏳ Waiting for demo to be ready... ($i/12)"
            sleep 10
          done
          
          # Seed demo data
          echo "🌱 Seeding demo data..."
          USER_COUNT="${{ github.event.inputs.user_count || '50' }}"
          docker compose -f docker-compose.demo.yml run --rm night-owls-demo-seed \
            ./seed --reset --users "$USER_COUNT" --future-bookings --verbose || echo "⚠️ Seeding completed with warnings"
          
          echo "🔄 Restarting Caddy with new configuration..."
          docker compose restart caddy
          
          echo "⏳ Final health checks..."
          sleep 15
          
          # Test demo health
          if curl -f http://localhost:5889/health > /dev/null 2>&1; then
            echo "✅ Demo backend healthy!"
          else
            echo "❌ Demo backend failed"
            docker compose -f docker-compose.demo.yml logs night-owls-demo --tail=20
            exit 1
          fi
          
          # Test demo frontend
          if curl -f -H "Host: demo.nightowls.app" http://localhost/ > /dev/null 2>&1; then
            echo "✅ Demo frontend accessible!"
          else
            echo "❌ Demo frontend failed"
            docker compose logs caddy --tail=20
            exit 1
          fi
          
          echo "🎉 Demo deployment completed!"
          echo "📍 Demo available at: https://demo.nightowls.app"
          echo "👥 Demo users created: $USER_COUNT"
          echo "🔑 Demo admin login: +27821234567 (OTP: any 6 digits in dev mode)"

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "✅ Demo deployment successful!"
          echo "🔗 Demo URL: https://demo.nightowls.app"
          echo "👤 Admin user: +27821234567"
          echo "🎮 Dev mode: Any 6-digit OTP works"
        else
          echo "❌ Demo deployment failed!"
        fi 