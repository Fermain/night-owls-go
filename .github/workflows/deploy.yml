name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: mm.nightowls.app
        username: deploy
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Stop existing containers
          mkdir -p ~/night-owls-app
          cd ~/night-owls-app
          
          # Detect Docker Compose version
          if docker compose version &> /dev/null; then
            DOCKER_COMPOSE="docker compose"
          else
            DOCKER_COMPOSE="docker-compose"
          fi
          
          echo "🛑 Stopping existing containers..."
          $DOCKER_COMPOSE down 2>/dev/null || true
          
          # Login to GitHub Container Registry with PAT
          echo "🔐 Authenticating with GitHub Container Registry..."
          echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull new image
          echo "📦 Pulling latest image..."
          docker pull ghcr.io/${{ github.repository }}:latest
          
          # Tag for docker-compose
          docker tag ghcr.io/${{ github.repository }}:latest night-owls-go:latest
          
          # Copy config files if needed
          echo "📋 Setting up configuration files..."
          if [ ! -f docker-compose.yml ]; then
            cp ~/night-owls-go/docker-compose.yml . || {
              echo "❌ Failed to copy docker-compose.yml"
              exit 1
            }
          fi
          
          # Update docker-compose.yml to use local image tag
          sed -i 's|build: \.|image: night-owls-go:latest|g' docker-compose.yml
          
          # Start application
          echo "🚀 Starting application..."
          $DOCKER_COMPOSE up -d
          
          # Wait and test
          echo "⏳ Waiting for application to start..."
          sleep 15
          
          # Health check
          echo "🏥 Running health check..."
          curl -f http://localhost:5888/health && echo "✅ Health check passed!" || echo "❌ Health check failed"
          
          # Show status
          echo "📊 Deployment status:"
          $DOCKER_COMPOSE ps
          
          echo "🎉 Deployment complete!" 