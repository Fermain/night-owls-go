// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
)

type Querier interface {
	AdminBulkDeleteSchedules(ctx context.Context, scheduleIds []int64) error
	CreateBooking(ctx context.Context, arg CreateBookingParams) (Booking, error)
	CreateOutboxItem(ctx context.Context, arg CreateOutboxItemParams) (Outbox, error)
	CreateReport(ctx context.Context, arg CreateReportParams) (Report, error)
	CreateSchedule(ctx context.Context, arg CreateScheduleParams) (Schedule, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteSchedule(ctx context.Context, scheduleID int64) error
	DeleteSubscription(ctx context.Context, arg DeleteSubscriptionParams) error
	DeleteUser(ctx context.Context, userID int64) error
	GetBookingByID(ctx context.Context, bookingID int64) (Booking, error)
	GetBookingByScheduleAndStartTime(ctx context.Context, arg GetBookingByScheduleAndStartTimeParams) (Booking, error)
	GetPendingOutboxItems(ctx context.Context, limit int64) ([]Outbox, error)
	GetReportByBookingID(ctx context.Context, bookingID int64) (Report, error)
	GetScheduleByID(ctx context.Context, scheduleID int64) (Schedule, error)
	GetSubscriptionsByUser(ctx context.Context, userID int64) ([]GetSubscriptionsByUserRow, error)
	GetUserByID(ctx context.Context, userID int64) (User, error)
	GetUserByPhone(ctx context.Context, phone string) (User, error)
	ListActiveSchedules(ctx context.Context, arg ListActiveSchedulesParams) ([]Schedule, error)
	ListAllSchedules(ctx context.Context) ([]Schedule, error)
	ListBookingsByUserID(ctx context.Context, userID int64) ([]Booking, error)
	ListReportsByUserID(ctx context.Context, userID int64) ([]Report, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateBookingAttendance(ctx context.Context, arg UpdateBookingAttendanceParams) (Booking, error)
	// Limit to prevent processing too many at once
	UpdateOutboxItemStatus(ctx context.Context, arg UpdateOutboxItemStatusParams) (Outbox, error)
	UpdateSchedule(ctx context.Context, arg UpdateScheduleParams) (Schedule, error)
	UpsertSubscription(ctx context.Context, arg UpsertSubscriptionParams) error
}

var _ Querier = (*Queries)(nil)
