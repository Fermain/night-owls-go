{
    "openapi": "3.0.0",
    "info": {
        "description": "API for managing community watch shifts, bookings, and reports",
        "title": "Community Watch Shift Scheduler API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/admin/bookings/assign": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an admin to book a specific user for a given schedule ID and start time.",
                "tags": [
                    "admin-bookings"
                ],
                "summary": "Assign a user to a specific shift slot (Admin)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.AssignUserToShiftRequest"
                            }
                        }
                    },
                    "description": "Assignment details (schedule_id, start_time, user_id)",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully for the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format or data (e.g., missing fields, invalid user/schedule)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user does not have admin privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Slot already booked or other conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns comprehensive dashboard metrics including unfilled shifts, member contributions, and quality metrics",
                "tags": [
                    "admin-dashboard"
                ],
                "summary": "Get admin dashboard metrics",
                "responses": {
                    "200": {
                        "description": "Dashboard metrics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service.AdminDashboard"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/emergency-contacts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all emergency contacts for admin management",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Get emergency contacts",
                "responses": {
                    "200": {
                        "description": "List of emergency contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new emergency contact",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Create emergency contact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.CreateEmergencyContactRequest"
                            }
                        }
                    },
                    "description": "Emergency contact data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created emergency contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/emergency-contacts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a specific emergency contact by ID",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Get emergency contact by ID",
                "parameters": [
                    {
                        "description": "Emergency Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Emergency contact details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid contact ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing emergency contact",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Update emergency contact",
                "parameters": [
                    {
                        "description": "Emergency Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.UpdateEmergencyContactRequest"
                            }
                        }
                    },
                    "description": "Emergency contact data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated emergency contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an emergency contact (cannot delete default contact)",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Delete emergency contact",
                "parameters": [
                    {
                        "description": "Emergency Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Emergency contact deleted successfully"
                    },
                    "400": {
                        "description": "Invalid contact ID or cannot delete default contact",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency contact not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/emergency-contacts/{id}/default": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sets a specific emergency contact as the default",
                "tags": [
                    "admin-emergency-contacts"
                ],
                "summary": "Admin: Set default emergency contact",
                "parameters": [
                    {
                        "description": "Emergency Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Default emergency contact updated successfully"
                    },
                    "400": {
                        "description": "Invalid contact ID",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - admin access required",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emergency contact not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all incident reports with full context including user and schedule information",
                "tags": [
                    "admin/reports"
                ],
                "summary": "List all reports (Admin)",
                "parameters": [
                    {
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by severity (0=info, 1=warning, 2=critical)",
                        "name": "severity",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Filter by schedule ID",
                        "name": "schedule_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reports with full context",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.AdminReportResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/archived": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all archived reports with full context",
                "tags": [
                    "admin/reports"
                ],
                "summary": "List archived reports (Admin)",
                "responses": {
                    "200": {
                        "description": "List of archived reports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.AdminReportResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a specific report with full context by ID",
                "tags": [
                    "admin/reports"
                ],
                "summary": "Get a specific report (Admin)",
                "parameters": [
                    {
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report with full context",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.AdminReportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid report ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/{id}/archive": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Archive a specific report by ID (soft delete)",
                "tags": [
                    "admin/reports"
                ],
                "summary": "Archive a report (Admin)",
                "parameters": [
                    {
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid report ID",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found or already archived",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/reports/{id}/unarchive": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Unarchive a specific report by ID",
                "tags": [
                    "admin/reports"
                ],
                "summary": "Unarchive a report (Admin)",
                "parameters": [
                    {
                        "description": "Report ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid report ID",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "description": "Get a list of all users in the system. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "List all users (Admin)",
                "parameters": [
                    {
                        "description": "Search term to filter users by name or phone",
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.UserAPIResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user in the system. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "Create a new user (Admin)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.createUserRequest"
                            }
                        }
                    },
                    "description": "User information",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.UserAPIResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/bulk-delete": {
            "post": {
                "description": "Delete multiple users by their IDs. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "Bulk delete users (Admin)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "List of user IDs to delete",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or no user IDs provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/{id}": {
            "get": {
                "description": "Get a specific user's details by their ID. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "Get a user by ID (Admin)",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.UserAPIResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's details by their ID. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "Update a user (Admin)",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.updateUserRequest"
                            }
                        }
                    },
                    "description": "User information",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Updated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.UserAPIResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user by their ID. Requires admin authentication.",
                "tags": [
                    "admin/users"
                ],
                "summary": "Delete a user (Admin)",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/{userId}/bookings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an admin to view all bookings (past and future) for a specific user.",
                "tags": [
                    "admin-bookings"
                ],
                "summary": "Get all bookings for a specific user (Admin)",
                "parameters": [
                    {
                        "example": 42,
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookings for the user with schedule names",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.BookingWithScheduleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - user does not have admin privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emergency-contacts": {
            "get": {
                "description": "Returns all active emergency contacts for public use",
                "tags": [
                    "emergency-contacts"
                ],
                "summary": "Get emergency contacts",
                "responses": {
                    "200": {
                        "description": "List of emergency contacts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emergency-contacts/default": {
            "get": {
                "description": "Returns the default emergency contact (usually RUSA)",
                "tags": [
                    "emergency-contacts"
                ],
                "summary": "Get default emergency contact",
                "responses": {
                    "200": {
                        "description": "Default emergency contact",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.EmergencyContactResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No default emergency contact found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/dev-login": {
            "post": {
                "description": "Bypasses OTP and directly generates JWT token for testing (DEV MODE ONLY)",
                "tags": [
                    "auth"
                ],
                "summary": "Development-only direct login endpoint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.DevLoginRequest"
                            }
                        }
                    },
                    "description": "Phone number for dev login",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "JWT token generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.DevLoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or dev mode disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user with phone number or starts login flow for existing user",
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user or request OTP for existing user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.RegisterRequest"
                            }
                        }
                    },
                    "description": "User registration details",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.RegisterResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid phone number or request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Verifies the one-time password (OTP) and returns a JWT token on success",
                "tags": [
                    "auth"
                ],
                "summary": "Verify OTP and get authentication token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.VerifyRequest"
                            }
                        }
                    },
                    "description": "Verification details",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Verified successfully, returns JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.VerifyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid OTP or verification failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Books a shift slot for a user",
                "tags": [
                    "bookings"
                ],
                "summary": "Create a new booking",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.CreateBookingRequest"
                            }
                        }
                    },
                    "description": "Booking details",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format or data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Slot already booked (conflict)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings/my": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all bookings for the authenticated user",
                "tags": [
                    "bookings"
                ],
                "summary": "Get current user's bookings",
                "responses": {
                    "200": {
                        "description": "List of user's bookings with schedule names",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.BookingWithScheduleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel a user's booking if it's not too close to the shift start time",
                "tags": [
                    "bookings"
                ],
                "summary": "Cancel a booking",
                "parameters": [
                    {
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Booking cancelled successfully"
                    },
                    "400": {
                        "description": "Invalid booking ID or booking cannot be cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to cancel this booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings/{id}/checkin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark the user as checked in to their booked shift with a timestamp",
                "tags": [
                    "bookings"
                ],
                "summary": "Check in to a booking",
                "parameters": [
                    {
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check-in marked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.BookingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid booking ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to check in to this booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookings/{id}/report": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submits an incident report for a specific booking",
                "tags": [
                    "reports"
                ],
                "summary": "Create a report for a booking",
                "parameters": [
                    {
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.CreateReportRequest"
                            }
                        }
                    },
                    "description": "Report details",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ReportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format or severity out of range",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to report on this booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/examples": {
            "post": {
                "description": "Creates an example resource with comprehensive request validation",
                "tags": [
                    "examples"
                ],
                "summary": "Create example with validation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.ExampleRequest"
                            }
                        }
                    },
                    "description": "Example data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Example created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ExampleResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error with detailed field information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.APIError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error with request tracking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.APIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/off-shift": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Submits an incident report when not on a scheduled shift",
                "tags": [
                    "reports"
                ],
                "summary": "Create an off-shift report",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/api.CreateOffShiftReportRequest"
                            }
                        }
                    },
                    "description": "Report details",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ReportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request format or severity out of range",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "description": "Returns a list of all defined schedules",
                "tags": [
                    "schedules"
                ],
                "summary": "List all schedules",
                "responses": {
                    "200": {
                        "description": "List of schedules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/api.ScheduleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shifts/available": {
            "get": {
                "description": "Returns a list of available shift slots based on schedule definitions",
                "tags": [
                    "shifts"
                ],
                "summary": "List available shift slots",
                "parameters": [
                    {
                        "description": "Start date for shift window (RFC3339 format)",
                        "name": "from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date for shift window (RFC3339 format)",
                        "name": "to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Maximum number of shifts to return",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available shift slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/service.AvailableShiftSlot"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api.ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:5888"
        }
    ],
    "components": {
        "schemas": {
            "api.APIError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "details": {
                        "description": "Detailed error information (development only)",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/api.ErrorDetails"
                            }
                        ]
                    },
                    "error": {
                        "description": "Core error information",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "request_id": {
                        "description": "Request context for debugging",
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "validation_errors": {
                        "description": "Validation errors (for input validation failures)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/api.ValidationError"
                        }
                    }
                }
            },
            "api.AdminReportResponse": {
                "type": "object",
                "properties": {
                    "archived_at": {
                        "type": "string"
                    },
                    "booking_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "gps_accuracy": {
                        "type": "number"
                    },
                    "gps_timestamp": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "message": {
                        "type": "string"
                    },
                    "report_id": {
                        "type": "integer"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "schedule_name": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "integer"
                    },
                    "shift_end": {
                        "type": "string"
                    },
                    "shift_start": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "user_name": {
                        "type": "string"
                    },
                    "user_phone": {
                        "type": "string"
                    }
                }
            },
            "api.AssignUserToShiftRequest": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                }
            },
            "api.BookingResponse": {
                "type": "object",
                "properties": {
                    "booking_id": {
                        "type": "integer"
                    },
                    "buddy_name": {
                        "type": "string"
                    },
                    "buddy_user_id": {
                        "type": "integer"
                    },
                    "checked_in_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "shift_end": {
                        "type": "string"
                    },
                    "shift_start": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                }
            },
            "api.BookingWithScheduleResponse": {
                "type": "object",
                "properties": {
                    "booking_id": {
                        "type": "integer"
                    },
                    "buddy_name": {
                        "type": "string"
                    },
                    "buddy_user_id": {
                        "type": "integer"
                    },
                    "checked_in_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "schedule_name": {
                        "type": "string"
                    },
                    "shift_end": {
                        "type": "string"
                    },
                    "shift_start": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                }
            },
            "api.CreateBookingRequest": {
                "type": "object",
                "properties": {
                    "buddy_name": {
                        "type": "string"
                    },
                    "buddy_phone": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "start_time": {
                        "type": "string"
                    }
                }
            },
            "api.CreateEmergencyContactRequest": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    }
                }
            },
            "api.CreateOffShiftReportRequest": {
                "type": "object",
                "properties": {
                    "accuracy": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "location_timestamp": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "message": {
                        "type": "string"
                    },
                    "severity": {
                        "description": "0, 1, or 2",
                        "type": "integer"
                    }
                }
            },
            "api.CreateReportRequest": {
                "type": "object",
                "properties": {
                    "accuracy": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "location_timestamp": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "message": {
                        "type": "string"
                    },
                    "severity": {
                        "description": "0, 1, or 2",
                        "type": "integer"
                    }
                }
            },
            "api.DevLoginRequest": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "api.DevLoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "role": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "api.EmergencyContactResponse": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    }
                }
            },
            "api.ErrorDetails": {
                "type": "object",
                "properties": {
                    "context": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "internal_message": {
                        "type": "string"
                    },
                    "stack_trace": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "api.ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            },
            "api.ExampleRequest": {
                "type": "object",
                "properties": {
                    "age": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "api.ExampleResponse": {
                "type": "object",
                "properties": {
                    "age": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "request_id": {
                        "type": "string"
                    }
                }
            },
            "api.RegisterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "api.RegisterResponse": {
                "type": "object",
                "properties": {
                    "dev_otp": {
                        "description": "Development only - include OTP for easier testing",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "api.ReportResponse": {
                "type": "object",
                "properties": {
                    "booking_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "report_id": {
                        "type": "integer"
                    },
                    "severity": {
                        "type": "integer"
                    }
                }
            },
            "api.ScheduleResponse": {
                "type": "object",
                "properties": {
                    "cron_expr": {
                        "type": "string"
                    },
                    "duration_minutes": {
                        "type": "integer"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    }
                }
            },
            "api.UpdateEmergencyContactRequest": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "display_order": {
                        "type": "integer"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    }
                }
            },
            "api.UserAPIResponse": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "description": "Added role",
                        "type": "string"
                    }
                }
            },
            "api.ValidationError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "api.VerifyRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                }
            },
            "api.VerifyResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "api.createUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "description": "Optional role",
                        "type": "string"
                    }
                }
            },
            "api.updateUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "description": "Make role required since frontend always sends it",
                        "type": "string"
                    }
                }
            },
            "service.AdminDashboard": {
                "type": "object",
                "properties": {
                    "generated_at": {
                        "type": "string"
                    },
                    "member_contributions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service.MemberContribution"
                        }
                    },
                    "metrics": {
                        "$ref": "#/components/schemas/service.DashboardMetrics"
                    },
                    "problematic_slots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/service.TimeSlotPattern"
                        }
                    },
                    "quality_metrics": {
                        "$ref": "#/components/schemas/service.QualityMetrics"
                    }
                }
            },
            "service.AvailableShiftSlot": {
                "type": "object",
                "properties": {
                    "end_time": {
                        "type": "string"
                    },
                    "is_booked": {
                        "description": "Should always be false when returned by GetUpcomingAvailableSlots",
                        "type": "boolean"
                    },
                    "schedule_id": {
                        "type": "integer"
                    },
                    "schedule_name": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    }
                }
            },
            "service.DashboardMetrics": {
                "type": "object",
                "properties": {
                    "booked_shifts": {
                        "type": "integer"
                    },
                    "check_in_rate": {
                        "type": "number"
                    },
                    "checked_in_shifts": {
                        "type": "integer"
                    },
                    "completed_shifts": {
                        "type": "integer"
                    },
                    "completion_rate": {
                        "type": "number"
                    },
                    "fill_rate": {
                        "type": "number"
                    },
                    "next_week_unfilled": {
                        "type": "integer"
                    },
                    "this_weekend_status": {
                        "type": "string"
                    },
                    "total_shifts": {
                        "type": "integer"
                    },
                    "unfilled_shifts": {
                        "type": "integer"
                    }
                }
            },
            "service.MemberContribution": {
                "type": "object",
                "properties": {
                    "attendance_rate": {
                        "type": "number"
                    },
                    "completion_rate": {
                        "type": "number"
                    },
                    "contribution_category": {
                        "type": "string"
                    },
                    "last_shift_date": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "shifts_attended": {
                        "type": "integer"
                    },
                    "shifts_booked": {
                        "type": "integer"
                    },
                    "shifts_completed": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                }
            },
            "service.QualityMetrics": {
                "type": "object",
                "properties": {
                    "incomplete_rate": {
                        "type": "number"
                    },
                    "no_show_rate": {
                        "type": "number"
                    },
                    "reliability_score": {
                        "type": "number"
                    }
                }
            },
            "service.TimeSlotPattern": {
                "type": "object",
                "properties": {
                    "check_in_rate": {
                        "type": "number"
                    },
                    "completion_rate": {
                        "type": "number"
                    },
                    "day_of_week": {
                        "type": "string"
                    },
                    "hour_of_day": {
                        "type": "string"
                    },
                    "total_bookings": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}